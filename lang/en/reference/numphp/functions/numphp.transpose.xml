<?xml version="1.0" encoding="utf-8"?>
<refentry xml:id="numphp.transpose">

<refnamediv>
  <refname>NumPhp::transpose</refname>
  <refpurpose>Permute the dimensions of an array.</refpurpose>
</refnamediv>

<!-- description -->
<refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
    &sciphp.ndarray.type;<methodname>NumPhp::transpose</methodname>
    <methodparam><type>&mixed.array_ndarray.type;</type><parameter>m</parameter></methodparam>
    <methodparam><type>&array.type;</type><parameter>axes</parameter></methodparam>
  </methodsynopsis>
</refsect1>

<!-- parameters -->
<refsect1 role="parameters">
  &reftitle.parameters;
  <para>
    <variablelist>
      <varlistentry>
        <term><parameter>m</parameter></term>
        <listitem>
          &mixed.array_ndarray.function.parameters;
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><parameter>axes</parameter></term>
        <listitem>
          &axes.array.function.parameters;
        </listitem>
      </varlistentry>
    </variablelist>
  </para>
</refsect1>

<!-- return -->
<refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
  The new &sciphp.ndarray.type;
  </para>
</refsect1>

<!-- examples -->
<refsect1 role="examples">
  &reftitle.examples;
  <para>
    <example>
      <title>Transpose a 1-dim array</title>
      <programlisting role="php">
<![CDATA[
use SciPhp\NumPhp as np;

$x = np::transpose([1, 2, 3]);

print $x;
]]>
      </programlisting>
      &example.outputs;
      <screen>
<![CDATA[
[1  2  3]
]]>
      </screen>
    </example>
    <example>
      <title>Transpose a 2-dim array</title>
      <programlisting role="php">
<![CDATA[
use SciPhp\NumPhp as np;

$x = np::linspace(1, 6, 6)->reshape(2, 3);
$xT = np::transpose($x);

echo "x\n$x", "xT\n$xT";
]]>
      </programlisting>
      &example.outputs;
      <screen>
<![CDATA[
x
[[1  2  3]
 [4  5  6]]
xT
[[1  4]
 [2  5]
 [3  6]]
]]>
      </screen>
    </example>
  </para>
</refsect1>

<!-- see also -->
<refsect1 role="seealso">
  &reftitle.seealso;
  <para>
    <simplelist>
      <member><function>NumPhp::add</function></member>
      <member><function>NumPhp::dot</function></member>
      <member><function>NumPhp::divide</function></member>
      <member><function>NumPhp::subtract</function></member>
      <member><function>NumPhp::eye</function></member>
    </simplelist>
  </para>
</refsect1>
</refentry>
